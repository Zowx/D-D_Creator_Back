// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         BigInt   @id @default(autoincrement())
  username   String   @unique
  password   String
  characters Character[]
}

model Character {
  id           BigInt   @id @default(autoincrement())
  raceId       BigInt
  race         Race     @relation(fields: [raceId], references: [id])
  classId      BigInt
  class        Class    @relation(fields: [classId], references: [id])
  backgroundId BigInt
  background   Background @relation(fields: [backgroundId], references: [id])
  alignmentId  BigInt
  alignment    Alignment @relation(fields: [alignmentId], references: [id])


  xp           Int
  level        Int
  name         String
  player       String
  AC           Int
  speed        Int
  hp           Int
  maxHp        Int
  tempHp       Int
  personality  String
  ideals       String
  bonds        String
  flaws        String
  age          Int
  height       String
  weight       String
  eyes         String
  skin         String
  hair         String
  appearance   String
  allies       String
  backstory    String
  treasure     String
  traits       String

  abilities    CharacterAbility[]
  skills       Skill[]             @relation("CharacterSkills", references: [id])
  languages    CharacterLanguage[]
}

model Race {
  id          BigInt      @id @default(autoincrement())
  name        String
  description String
  subraceOf   BigInt?

  raceTraits RaceTrait[]
  characters Character[]
}

model Trait {
  id          BigInt      @id @default(autoincrement())
  name        String
  description String

  raceTraits RaceTrait[]
}

model RaceTrait {
  id      Int     @id @default(autoincrement())
  raceId  BigInt
  traitId BigInt

  race    Race    @relation(fields: [raceId], references: [id])
  trait   Trait   @relation(fields: [traitId], references: [id])
}

model Class {
  id           BigInt   @id @default(autoincrement())
  name         String
  hitDice      Int
  subclassId   BigInt?

  subclass     Class?   @relation("SubclassRelation", fields: [subclassId], references: [id])
  savingThrows Ability[] @relation("SavingThrows")
  characters   Character[]
}

model Ability {
  id          BigInt     @id @default(autoincrement())
  name        String
  description String
  shortDesc   String
  skillId     BigInt?

  skill       Skill?     @relation(fields: [skillId], references: [id])
  classes     Class[]    @relation("SavingThrows")
  characterAbilities CharacterAbility[]
}

model Skill {
  id          BigInt  @id @default(autoincrement())
  name        String
  description String
  abilityId   BigInt

  ability     Ability @relation(fields: [abilityId], references: [id])
  characters  Character[] @relation("CharacterSkills")
}

model Background {
  id                       BigInt @id @default(autoincrement())
  name                     String
  description              String
  abilityChoice            Int
  skillChoice              Int
  languagesChoice          Int
  connectionAndMemento     String
  adventuresAndAdvancement String
  featureName              String
  featureDescription       String

  abilities  BackgroundAbility[]
  skills     BackgroundSkill[]
  languages  BackgroundLanguage[]
  characters Character[]
}

model BackgroundSkill {
  id           BigInt @id @default(autoincrement())
  backgroundId BigInt
  skillId      BigInt

  background   Background @relation(fields: [backgroundId], references: [id])
  skill        Skill      @relation(fields: [skillId], references: [id])
}

model BackgroundLanguage {
  id           BigInt @id @default(autoincrement())
  backgroundId BigInt
  languageId   BigInt

  background   Background @relation(fields: [backgroundId], references: [id])
  language     Language   @relation(fields: [languageId], references: [id])
}

model BackgroundAbility {
  id           BigInt @id @default(autoincrement())
  backgroundId BigInt
  abilityId    BigInt
  value        Int

  background   Background @relation(fields: [backgroundId], references: [id])
  ability      Ability    @relation(fields: [abilityId], references: [id])
}

model Alignment {
  id          BigInt @id @default(autoincrement())
  name        String
  description String

  characters  Character[]
}

model CharacterAbility {
  id          BigInt @id @default(autoincrement())
  characterId BigInt
  abilityId   BigInt
  value       String

  character   Character @relation(fields: [characterId], references: [id])
  ability     Ability   @relation(fields: [abilityId], references: [id])
}

model Language {
  id          BigInt @id @default(autoincrement())
  name        String
  description String
  exotic      Boolean
  secret      Boolean

  characters  CharacterLanguage[]
}

model CharacterLanguage {
  id          BigInt @id @default(autoincrement())
  characterId BigInt
  languageId  BigInt

  character   Character @relation(fields: [characterId], references: [id])
  language    Language  @relation(fields: [languageId], references: [id])
}

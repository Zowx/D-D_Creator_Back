// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
} 

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       BigInt @id @default(autoincrement())
  username     String @unique
  password  String

  characters Character[]
}
model Character {
  id            BigInt @id @default(autoincrement())
  race          Race @relation(fields: [raceId], references: [id])
  raceId        BigInt
  class         Class @relation(fields: [classId], references: [id])
  classId       BigInt
  background    Background @relation(fields: [backgroundId], references: [id])
  backgroundId  BigInt @unique
  alignment     Alignment @relation(fields: [alignmentId], references: [id])
  alignmentId   BigInt
  xp            Int
  level         Int
  name          String
  player        String
  AC            Int
  speed         Int
  hp            Int
  max_hp        Int
  temp_hp       Int
  personality   String
  ideals        String
  bonds         String
  flaws         String
  age           Int
  height        String
  weight        String
  eyes          String
  skin          String
  hair          String
  appearance    String
  allies        String
  backstory     String
  treasure      String
  traits        String
  playerSkills  PlayerSkill[]
  abilities     CharacterAbility[]
  languages     CharacterLanguage[]

  User User? @relation(fields: [Userid], references: [id])
  Userid BigInt?
}

model Race {
  id          BigInt @id @default(autoincrement())
  name        String
  description String

  Race Race[] @relation("Subrace")
  
  subrace_of  Race?  @relation("Subrace", fields: [subraceOfId], references: [id])
  subraceOfId BigInt?

  Trait Trait[]
  traits        RaceTrait[]

  Character Character[]
}

model Trait {
  id          BigInt @id @default(autoincrement())
  name        String
  description String

  Race          Race[]
  races         RaceTrait[]
}

model RaceTrait {
  id            Int @id @default(autoincrement())
  race          Race @relation(fields: [raceId], references: [id])
  raceId        BigInt
  trait         Trait @relation(fields: [traitId], references: [id])
  traitId       BigInt
}

model Class {
  id            BigInt @id @default(autoincrement())
  name          String
  caster_type   String
  subclass      String
  savingThrows Ability[] @relation("SavingThrows")
  hit_dice      String

  Character Character[]
}

model Ability {
  id          BigInt @id @default(autoincrement())
  name        String
  description String
  short_desc  String

  skill Skill? @relation(fields: [skillid], references: [id])
  skillid BigInt?
  class Class[] @relation("SavingThrows")

  CharacterAbility CharacterAbility[]
}

model Skill {
  id          BigInt @id @default(autoincrement()) @unique
  name        String
  description String
  ability     Ability[]

  playerSkill PlayerSkill[]
  Background_Skill Background_Skill[]
}

model Background {
  id          BigInt @id @default(autoincrement()) @unique
  name        String
  description String
  character   Character?
  skills       Background_Skill[]
}

model Background_Skill {
  id             BigInt @id @default(autoincrement())
  skill_potential Skill @relation(fields: [skillId], references: [id])
  skillId        BigInt
  background      Background @relation(fields: [backgroundId], references: [id])
  backgroundId    BigInt @unique
}

model Alignment {
  id          BigInt @id @default(autoincrement())
  name        String
  description String
  
  Character Character[]
}

model PlayerSkill {
  id    BigInt @id @default(autoincrement())@unique
  value String
  character     Character @relation(fields: [characterId], references: [id])
  characterId   BigInt

  Skill Skill[]
}

model SavingThrows {
  id   Int @default(autoincrement()) @unique
  skill String
  character String
}

model CharacterAbility {
  id      BigInt @id @default(autoincrement())@unique
  character     Character @relation(fields: [characterId], references: [id])
  characterId   BigInt
  ability       Ability @relation(fields: [abilityId], references: [id])
  abilityId     BigInt
}

model Language {
  id          BigInt @id @default(autoincrement())
  name        String
  description String
  exotic      Boolean
  characters    CharacterLanguage[]
}

model CharacterLanguage {
  id        BigInt @id @default(autoincrement())
  character     Character @relation(fields: [characterId], references: [id])
  characterId   BigInt
  language      Language @relation(fields: [languageId], references: [id])
  languageId    BigInt
}

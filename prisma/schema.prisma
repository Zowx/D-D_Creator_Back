// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         BigInt @id @default(autoincrement())
  username   String @unique
  password   String
  characters Character[]
}

model Character {
  id           BigInt @id @default(autoincrement())
  raceId       BigInt
  race         Race @relation(fields: [raceId], references: [id])
  classId      BigInt
  class        Class @relation(fields: [classId], references: [id])
  backgroundId BigInt
  background   Background @relation(fields: [backgroundId], references: [id])
  alignmentId  BigInt
  alignment    Alignment @relation(fields: [alignmentId], references: [id])
  xp           Int
  level        Int
  name         String
  player       String
  AC           Int
  speed        Int
  hp           Int
  max_hp       Int
  temp_hp      Int
  personality  String
  ideals       String
  bonds        String
  flaws        String
  age          Int
  height       String
  weight       String
  eyes         String
  skin         String
  hair         String
  appearance   String
  allies       String
  backstory    String
  treasure     String
  traits       String

  Userid BigInt?
  User   User? @relation(fields: [Userid], references: [id])

  playerSkills       PlayerSkill[]
  abilities          CharacterAbility[]
  languages          CharacterLanguage[]
}

model Race {
  id          BigInt @id @default(autoincrement())
  name        String
  description String
  subrace_of  BigInt?

  raceTraits RaceTrait[]
}

model Trait {
  id          BigInt @id @default(autoincrement())
  name        String
  description String

  raceTraits RaceTrait[]
}

model RaceTrait {
  id       Int @id @default(autoincrement())
  raceId   BigInt
  race     Race @relation(fields: [raceId], references: [id])
  traitId  BigInt
  trait    Trait @relation(fields: [traitId], references: [id])
}

model Class {
  id           BigInt @id @default(autoincrement())
  name         String
  hitDice      Int
  subclassId   BigInt?
  subclass     Class? @relation("SubclassRelation", fields: [subclassId], references: [id])

  savingThrows Ability[] @relation("SavingThrows")
}

model Ability {
  id           BigInt @id @default(autoincrement())
  name         String
  description  String
  short_desc   String
  skill        Skill? @relation(fields: [skillid], references: [id])

  class        Class[] @relation("SavingThrows")
  characterAbilities CharacterAbility[]
}

model Skill {
  id          BigInt @id @default(autoincrement()) @unique
  name        String
  description String
  abilityId   BigInt
}

model Background {
  id                       BigInt @id @default(autoincrement()) @unique
  name                     String
  description              String
  abilityChoice            Int
  skillChoice              Int
  languagesChoice          Int
  connectionAndMemento     String
  adventuresAndAdvancement String
  featureName              String
  featureDescription       String

  ability      BackgroundAbility[]
  skills       Background_Skill[]
  languages    BackgroundLanguage[]
  characters   Character[]
}

model Background_Skill {
  id           BigInt @id @default(autoincrement())
  skillId      BigInt
  backgroundId BigInt

  skill       Skill     @relation(fields: [skillId], references: [id])
  background  Background @relation(fields: [backgroundId], references: [id])
}

model BackgroundLanguage {
  id           BigInt @id @default(autoincrement()) @unique
  languageId   BigInt
  backgroundId BigInt

  language    Language   @relation(fields: [languageId], references: [id])
  background  Background @relation(fields: [backgroundId], references: [id])
}

model BackgroundAbility {
  id           BigInt @id @default(autoincrement()) @unique
  abilityId    BigInt
  backgroundId BigInt
  value        Int

  ability     Ability    @relation(fields: [abilityId], references: [id])
  background  Background @relation(fields: [backgroundId], references: [id])
}

model Alignment {
  id          BigInt @id @default(autoincrement()) @unique
  name        String
  description String

  Character Character[]
}

model CharacterSkill {
  id          BigInt @id @default(autoincrement()) @unique
  value       String
  characterId BigInt

  character   Character @relation(fields: [characterId], references: [id])
  skills      Skill[]
}

model CharacterAbility {
  id          BigInt @id @default(autoincrement()) @unique
  characterId BigInt
  abilityId   BigInt

  character   Character @relation(fields: [characterId], references: [id])
  ability     Ability @relation(fields: [abilityId], references: [id])
}

model Language {
  id          BigInt @id @default(autoincrement())
  name        String
  description String
  exotic      Boolean

  characters  CharacterLanguage[]
}

model CharacterLanguage {
  id          BigInt @id @default(autoincrement())
  characterId BigInt
  languageId  BigInt

  character   Character @relation(fields: [characterId], references: [id])
  language    Language  @relation(fields: [languageId], references: [id])
}
